<web-app xmlns="http://java.sun.com/xml/ns/javaee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://java.sun.com/xml/ns/javaee
                      http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd"
         version="3.0"
         metadata-complete="true">
  <!--对客户端请求的静态资源如图片、JS文件等的请求交由默认的servlet进行处理-->
  <!--如果你的DispatcherServlet拦截"/"，为了实现REST风格，拦截了所有的请求，那么同时对*.js,*.jpg等静态文件的访问也就被拦截了。-->
  <!--我们要解决这个问题。-->
  <!--目的：可以正常访问静态文件，不可以找不到静态文件报404。-->
  <!--要写在DispatcherServlet的前面， 让 defaultServlet先拦截请求，这样请求就不会进入Spring了，我想性能是最好的吧。-->
  <!--如果spring4mvc的mapping配置拦截类似于*.do格式的拦截规则，则对静态资源的访问是没有问题的，但是如果配置拦截了所有的请求（如我们上面配置的“/”），就会造成js文件、css文件、图片文件等静态资源无法访问。-->
  <!--这种方案不会被拦截器拦截，其他实现方案会（不设置相关烦不拦截规则）-->

  <!--注意！ 不能拦截error  不然 错误页面就渲染不了-->
  <servlet-mapping>
    <servlet-name>default</servlet-name>
    <url-pattern>/static/css/*</url-pattern>
    <url-pattern>/static/js/*</url-pattern>
    <url-pattern>/static/img/*</url-pattern>
  </servlet-mapping>

  <!--要有 不然部署到服务器 会出现找不到配置文件-->
  <listener>
    <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
  </listener>
  <context-param>
    <param-name>contextConfigLocation</param-name>
    <param-value>classpath:spring/spring-dao.xml
      classpath:spring/spring-web.xml
      classpath:spring/spring-service.xml</param-value>
  </context-param>

  <!--用maven创建的web-app需要修改servlet的版本为3.0-->
  <!--配置DispatcherServlet-->
  <servlet>
    <servlet-name>seckill-dispatcher</servlet-name>
    <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
    <!--
        配置SpringMVC 需要配置的文件
        spring-dao.xml，spring-service.xml,spring-web.xml
        Mybites -> spring -> springMvc
    -->
    <init-param>
      <param-name>contextConfigLocation</param-name>
      <param-value>classpath:spring/spring-dao.xml
        classpath:spring/spring-web.xml
        classpath:spring/spring-service.xml</param-value>
    </init-param>
  </servlet>



  <servlet-mapping>
    <servlet-name>seckill-dispatcher</servlet-name>
    <!--默认匹配所有请求-->
    <url-pattern>/</url-pattern>
  </servlet-mapping>


  <filter>
    <filter-name>encodingFilter</filter-name>
    <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
    <init-param>
      <param-name>encoding</param-name>
      <param-value>UTF-8</param-value>
    </init-param>
    <init-param>
      <param-name>forceEncoding</param-name>
      <param-value>true</param-value>
    </init-param>
  </filter>
  <filter-mapping>
    <filter-name>encodingFilter</filter-name>
    <url-pattern>/*</url-pattern>
  </filter-mapping>

  <welcome-file-list>
    <welcome-file>hello.html</welcome-file>
  </welcome-file-list>

  <error-page>
    <error-code>404</error-code>
    <location>/static/error/404.jsp</location>
  </error-page>
  <error-page>
    <error-code>500</error-code>
    <location>/static/error/500.jsp</location>
  </error-page>
</web-app>